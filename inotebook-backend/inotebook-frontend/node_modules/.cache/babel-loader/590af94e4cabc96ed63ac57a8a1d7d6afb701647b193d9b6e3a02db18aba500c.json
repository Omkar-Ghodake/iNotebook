{"ast":null,"code":"import React,{useState}from'react';import NoteContext from'./noteContext';import{jsx as _jsx}from\"react/jsx-runtime\";const NoteState=props=>{const host='https://your-notebook-backend.vercel.app:5000';const notesInitial=[];const[notes,setNotes]=useState(notesInitial);// Get all notes\nconst getNotes=async()=>{// API Call\nconst response=await fetch(\"\".concat(host,\"/api/notes/fetchallnotes\"),{method:'GET',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});const json=await response.json();setNotes(json);};// Add a Note\nconst addNote=async(title,description,tag)=>{// API Call\nconst response=await fetch(\"\".concat(host,\"/api/notes/addnote\"),{method:'POST',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title,description,tag})});const note=await response.json();setNotes(notes.concat(note));};// Delete a Note\nconst deleteNote=async id=>{// API Call\n// eslint-disable-next-line\nconst response=await fetch(\"\".concat(host,\"/api/notes/deletenote/\").concat(id),{method:'DELETE',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')}});const newNotes=notes.filter(note=>{return note._id!==id;});setNotes(newNotes);};// Edit a Note\nconst editNote=async(id,title,description,tag)=>{// API Call\n// eslint-disable-next-line\nconst response=await fetch(\"\".concat(host,\"/api/notes/updatenote/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json','auth-token':localStorage.getItem('token')},body:JSON.stringify({title,description,tag})});// const json = await response.json();\nlet newNotes=JSON.parse(JSON.stringify(notes));for(let index=0;index<notes.length;index++){const element=newNotes[index];if(element._id===id){newNotes[index].title=title;newNotes[index].description=description;newNotes[index].tag=tag;break;}}setNotes(newNotes);};return/*#__PURE__*/_jsx(NoteContext.Provider,{value:{notes,addNote,deleteNote,editNote,getNotes},children:props.children});};export default NoteState;","map":{"version":3,"names":["React","useState","NoteContext","jsx","_jsx","NoteState","props","host","notesInitial","notes","setNotes","getNotes","response","fetch","concat","method","headers","localStorage","getItem","json","addNote","title","description","tag","body","JSON","stringify","note","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","Provider","value","children"],"sources":["/home/omkar/Desktop/Techs/MERN/Full Stack/yourNotebook/yourNotebook/inotebook-frontend/src/context/notes/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport NoteContext from './noteContext'\r\n\r\nconst NoteState = (props) => {\r\n  const host = 'https://your-notebook-backend.vercel.app:5000'\r\n  const notesInitial = []\r\n  const [notes, setNotes] = useState(notesInitial)\r\n\r\n  // Get all notes\r\n  const getNotes = async () => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token'),\r\n      },\r\n    })\r\n    const json = await response.json()\r\n    setNotes(json)\r\n  }\r\n\r\n  // Add a Note\r\n  const addNote = async (title, description, tag) => {\r\n    // API Call\r\n    const response = await fetch(`${host}/api/notes/addnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    })\r\n\r\n    const note = await response.json()\r\n    setNotes(notes.concat(note))\r\n  }\r\n\r\n  // Delete a Note\r\n  const deleteNote = async (id) => {\r\n    // API Call\r\n    // eslint-disable-next-line\r\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token'),\r\n      },\r\n    })\r\n\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== id\r\n    })\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  // Edit a Note\r\n  const editNote = async (id, title, description, tag) => {\r\n    // API Call\r\n    // eslint-disable-next-line\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({ title, description, tag }),\r\n    })\r\n    // const json = await response.json();\r\n\r\n    let newNotes = JSON.parse(JSON.stringify(notes))\r\n    for (let index = 0; index < notes.length; index++) {\r\n      const element = newNotes[index]\r\n      if (element._id === id) {\r\n        newNotes[index].title = title\r\n        newNotes[index].description = description\r\n        newNotes[index].tag = tag\r\n        break\r\n      }\r\n    }\r\n    setNotes(newNotes)\r\n  }\r\n\r\n  return (\r\n    <NoteContext.Provider\r\n      value={{ notes, addNote, deleteNote, editNote, getNotes }}\r\n    >\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NoteState\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}